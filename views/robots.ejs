<%- include('templates/header') %>
    <style>
        #filter {
            display: flex;
            flex-direction: column;
            position: absolute;
            background-color: white;
            color: black;
            border-radius: 100px;
            padding: 4px;
            padding-left: 12px;
            padding-right: 12px;
            width: 50px;
            height: 34px;
            transition-property: all;
            transition-duration: 0.5s;
        }

        .expand {
            border-radius: 10px !important;
            width: 410px !important;
            height: 200px !important;
        }

        .back-button {
            position: absolute;
            top: 60px;
            left: 0px;
        }
    </style>

    <a href="/protection" class="back-button">
        <span
            class="material-symbols-outlined absolute top-0 left-0 mt-4 ml-4 inline-block px-3 py-1 bg-[#515F84] rounded-lg text-[#EAD797]">
            arrow_back_ios
        </span>
    </a>
    <div class="flex justify-center mt-32 mb-28">
        <h1 class="font-bold text-white text-4xl">Security Robots</h1>
    </div>
    <div class="container mx-auto">
        <div class="flex justify-start mb-6 gap-4 w-[95%] px-2">
            <button class="" id="filter">
                <span class="material-symbols-outlined">
                    filter_alt
                </span>
            </button>
            <button class="invisible bg-white rounded-full pt-2 px-3">
                <span class="material-symbols-outlined">
                    filter_alt
                </span>
            </button>
            <button class="bg-white rounded-full pt-2 px-3" id="sort">
                <span class="material-symbols-outlined">
                    sort
                </span>
            </button>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const btn = document.getElementById('filter');
                    const initialHTML = btn.innerHTML;  // Store initial HTML
                    const initialWidth = btn.style.width;  // Store initial width
                    const initialHeight = btn.style.height;  // Store initial height

                    function expandFilter() {
                        btn.classList.toggle('expand');
                        if (btn.classList.contains('expand')) {
                            btn.removeEventListener('click', expandFilter);
                            setTimeout(() => {
                                btn.innerHTML = `
                                    <div class='w-full flex justify-start'>
                                        <button id='closeButton'>
                                            <span class='material-symbols-outlined'>
                                                close
                                            </span>
                                        </button>
                                    </div>
                                    <div class='w-full flex flex-col gap-2'>
                                        <div>
                                            <label for='priceRange'>Price: </label>
                                            <input type='range' id='priceRange' name='priceRange' min='0' max='10000' value='0' oninput='this.nextElementSibling.value = this.value'>
                                            <output>0</output>
                                        </div>
                                        <div>
                                            <label for='manufacturerFilter'>Manufacturer</label>
                                            <select id='manufacturerFilter'>
                                                <option value=''>Select Manufacturer: </option>
                                                <% uniqueManufacturers.forEach(manufacturer => { %>
                                                    <option value='<%= manufacturer %>'><%= manufacturer %></option>
                                                <% }); %>
                                            </select>
                                        </div>
                                        <div>
                                            <label for='typeFilter'>Type: </label>
                                            <select id='typeFilter'>
                                                <option value=''>Select Type</option>
                                                <% uniqueTypes.forEach(type => { %>
                                                    <option value='<%= type %>'><%= type %></option>
                                                <% }); %>
                                            </select>
                                        </div>
                                        <div class="flex justify-end">
                                            <button id="filterOkButton" class="flex justify-center items-center w-10 bg-blue-500 text-white rounded px-4 py-2 mt-2">OK</button>
                                        </div>
                                    </div>
                                    `;
                                const closeBtn = btn.querySelector('#closeButton');
                                closeBtn.addEventListener('click', expandFilter);
                                const filterOkButton = btn.querySelector('#filterOkButton');
                                filterOkButton.addEventListener('click', filterRobots);
                            }, 500);
                        } else {
                            setTimeout(() => {
                                btn.addEventListener('click', expandFilter);
                            }, 500);
                            btn.innerHTML = initialHTML;
                            btn.style.width = initialWidth;
                            btn.style.height = initialHeight;
                        }
                    }
                    function filterRobots() {
                        const selectedType = document.getElementById('typeFilter').value;
                        const selectedManufacturer = document.getElementById('manufacturerFilter').value;
                        const maxPrice = document.getElementById('priceRange').value;

                        const queryParams = new URLSearchParams({
                            type: selectedType,
                            manufacturer: selectedManufacturer,
                            price: maxPrice
                        }).toString();

                        window.location.href = `/robots?${queryParams}`;
                    }

                    btn.addEventListener('click', expandFilter);
                });
            </script>
        </div>
        <% for(let i=0; i<robots.length; i++) {%>
            <div class="flex flex-col items-center gap-14 font-bold text-3xl robot-container"
                data-type="<% robots[i].type %>">
                <div class="flex bg-gray-300 text-center w-[90%] rounded-lg py-5 mb-4">
                    <span class="material-symbols-outlined text-[70px]">
                        robot_2
                    </span>
                    <div class="flex justify-between w-full px-4">
                        <div class="flex flex-col text-left pt-2">
                            <h2 class="text-lg">Model: <%= robots[i].model %>
                            </h2>
                            <p class="text-lg">Price: $<%= robots[i].price %>
                            </p>
                        </div>
                        <button data-modal-target="robot-modal" data-modal-toggle="robot-modal" class="text-lg ml-4"
                            type="button">
                            Details
                        </button>
                    </div>
                </div>
            </div>
            <% } %>
    </div>
    <%- include('templates/modal', { modalId: 'robot-modal' , icon: 'robot_2' , description: '(model description)' }) %>
        <%- include('templates/footer') %>

            <script>
                // Custom JavaScript to handle modal toggle
                document.addEventListener('DOMContentLoaded', function () {
                    const modalToggleButtons = document.querySelectorAll('[data-modal-toggle]');
                    const modalHideButtons = document.querySelectorAll('[data-modal-hide]');
                    const modals = document.querySelectorAll('.hidden');
                    const modalBody = document.getElementById('modal-body');
                    const modalFooter = document.getElementById('modal-footer');
                    const bookNowButton = document.getElementById('book-now-button');
                    const orderButton = document.getElementById('order-button');
                    const homeButton = document.getElementById('home-button');

                    const initialModalBodyContent = modalBody.innerHTML;
                    const initialModalFooterContent = modalFooter.innerHTML;

                    function reassignEventListeners() {
                        bookNowButton.addEventListener('click', function () {
                            modalBody.innerHTML = `
                    <div class="flex justify-center mb-4">
                        <span class="material-symbols-outlined text-[70px]">
                        robot_2
                    </span>
                    </div>
                    <div class="bg-gray-200 text-center py-10 rounded-lg">
                        <p class="text-lg">Order Template</p>
                    </div>
                `;
                            bookNowButton.style.display = 'none';
                            orderButton.style.display = 'block';
                            homeButton.style.display = 'none';
                        });

                        orderButton.addEventListener('click', function () {
                            modalBody.innerHTML = `
                    <div class="flex justify-center mb-4">
                        <span class="material-symbols-outlined text-[70px]">
                        robot_2
                    </span>
                    </div>
                    <div class="bg-gray-200 text-center py-10 rounded-lg">
                        <p class="text-lg">Order Confirmation</p>
                    </div>
                `;
                            orderButton.style.display = 'none';
                            homeButton.style.display = 'block';
                        });

                        homeButton.addEventListener('click', function () {
                            window.location.href = '/map';
                        });
                    }

                    modalToggleButtons.forEach(button => {
                        button.addEventListener('click', function () {
                            const targetModalId = button.getAttribute('data-modal-target');
                            const targetModal = document.getElementById(targetModalId);
                            if (targetModal) {
                                targetModal.classList.remove('hidden');
                                targetModal.classList.add('flex');
                            }
                        });
                    });

                    modalHideButtons.forEach(button => {
                        button.addEventListener('click', function () {
                            const targetModalId = button.getAttribute('data-modal-hide');
                            const targetModal = document.getElementById(targetModalId);
                            if (targetModal) {
                                targetModal.classList.add('hidden');
                                targetModal.classList.remove('flex');
                                // Reset modal content to initial state
                                modalBody.innerHTML = initialModalBodyContent;
                                modalFooter.innerHTML = initialModalFooterContent;
                                // Reassign event listeners after resetting content
                                reassignEventListeners();
                            }
                        });
                    });

                    // Initial assignment of event listeners
                    reassignEventListeners();
                });

                function filter() {
                    const filter = document.getElementById('filter');
                    filter.style.display = filter.style.display === 'none' ? 'block' : 'none';
                }
            </script>