<%- include("templates/header") %>
<main class="bg-[#515F84] text-white p-4 mt-8">
    <div class="container mx-auto">
        <h1 class="text-3xl font-bold mb-4 flex justify-center py-8">Criminals Near You</h1>
        <div class="flex justify-between mb-5">
            <div>
                <button class="bg-white text-black rounded-full p-1 px-3">
                    <span class="material-symbols-outlined text-base" onclick="toggleFilter()">filter_alt</span>
                    <div id="filter" class="filter-options">
                    <input type="checkbox">
                    <label>Crime 1</label>
                    <input type="checkbox">
                    <label>Crime 2</label>
                    <input type="checkbox">
                    <label>Crime 3</label>
                    <input type="checkbox">
                    <label>Crime 4</label>
                </div>
                </button>
                
                <button class="bg-white text-black rounded-full p-1 px-3" onclick="sort()">
                    <span class="material-symbols-outlined text-base">sort</span>
                </button>
            </div>
            <button class="bg-white text-black rounded-full px-2 p-1 text-base" onclick='location.href="/map"'>map</button>
        </div>

        <div id="sort" style="display: none;" class="pb-5">
            <div class="flex justify-start gap-8">
                <button id="sortName" onclick="sortList('name')">Name</button>
                <button id="sortCrimes" onclick="sortList('crimes')">Crimes</button>
            </div>
        </div>
        <% criminals.forEach(function(criminal, index) { %>
            <div class="criminal-card bg-blue-800 p-4 rounded-lg shadow-md mb-4" onclick="hide('<%= index %>')" style="cursor: pointer;">
                <div class="flex justify-between" id="sCard-<%= index %>">
                    <div class="flex justify-start">
                        <img style="height: 100px;" src="<%= criminal.image %>">
                        <div class="flex-col mx-3">
                            <h2 class="criminal-name text-xl font-semibold">Name: <%= criminal.firstName %><%= criminal.middleName %> <%= criminal.lastName %></h2>
                            <p class="criminal-crimes">Number of offenses: <%= criminal.convictions.length %></p>
                        </div>
                    </div>
                    <button onclick="toggleDetails(event, '<%= index %>')" class="bg-blue-700 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded" id="detailButton-<%= index %>">Details</button>
                </div>
                <div id="details-<%= index %>" class="hidden" style="transition: all 2s ease;">
                    <div>
                        <div>
                            <p>Name: <%= criminal.firstName %><%= criminal.middleName %> <%= criminal.lastName %></p>
                            <p>DOB: <%= criminal.dob %></p>
                            <p>Address: <%= criminal.address.address %>, <%= criminal.address.city %> <%= criminal.address.province %></p>
                            <p>Gender: <%= criminal.gender %></p>
                            <p class="pb-8">Description: </p>
                            <div class="overflow-y-scroll bg-white text-black p-5">
                                <p><%= criminal.description %></p>
                                <p>Nature of Crime: <%= criminal.nature_of_crime %></p>
                                <p>Date of Crime: <%= criminal.date_of_crime %></p>
                                <p>Sentence: <%= criminal.sentence %></p>
                                <ul>
                                    <% criminal.convictions.forEach(function(crime) { %>
                                        <li><%= crime.crime %> - <%= crime.date %> - <%= crime.sentence %></li>
                                    <% }); %>
                                </ul>
                            </div>
                        </div>
                        <div class="text-right pt-5">
                            <button class="rounded-full bg-cyan-600 p-2 px-3 hover:bg-cyan-700" onclick="location.href='/protection'">Protect Us</button>
                        </div>
                    </div>
                </div>
            </div>
        <% }); %>
    </div>
</main>

<style>
    .filter-options {
        display: none;
        overflow: hidden;
        max-height: 0;
        opacity: 0;
        transition: max-height 0.5s ease, opacity 0.5s ease;
        position: absolute;
        background-color: white;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .filter-options.show {
        display: block;
        max-height: 200px; /* Adjust to the maximum height you expect */
        opacity: 1;
    }
</style>

<script>
    let currentSortOrder = {
        name: 'asc',
        crimes: 'asc'
    };

    function toggleDetails(event, index) {
        event.stopPropagation(); 
        const details = document.getElementById('details-' + index);
        const button = document.getElementById('detailButton-' + index);
        const sCard = document.getElementById('sCard-' + index);
        details.style.display = details.style.display === 'block' ? 'none' : 'block';
        if(details.style.display === 'block'){  
            sCard.style.display = 'none';
        }
    }

    function hide(index){
        const details = document.getElementById('details-' + index);
        const button = document.getElementById('detailButton-' + index);
        const sCard = document.getElementById('sCard-' + index);
        if(details.style.display === 'block'){
            details.style.display = 'none';
            sCard.style.display = 'flex';
        }
    }

    function toggleFilter() {
        const filter = document.getElementById('filter');
        if (filter.classList.contains('show')) {
            filter.classList.remove('show');
            setTimeout(() => {
                filter.style.display = 'none';
            }, 500); // Matches the transition duration
        } else {
            filter.style.display = 'block';
            setTimeout(() => {
                filter.classList.add('show');
            }, 10); // Allow for the display change to take effect
        }
    }

    function sort() {
        const sort = document.getElementById('sort');
        sort.style.display = sort.style.display === 'none' ? 'block' : 'none';
    }

    // Function to sort the list of criminal cards based on a specified criteria ('name' or 'crimes')
function sortList(criteria) {
    // Select all elements with the class 'criminal-card' and convert the NodeList to an array
    const cards = document.querySelectorAll('.criminal-card');
    const cardArray = Array.from(cards);

    // Declare a variable to hold the sorted cards
    let sortedCards;

    // If the criteria is 'name', sort by the criminal's name
    if (criteria === 'name') {
        // Sort the array of cards based on the name of the criminal
        sortedCards = cardArray.sort((a, b) => {
            // Retrieve and convert the names to lowercase for comparison
            const nameA = a.querySelector('.criminal-name').innerText.toLowerCase();
            const nameB = b.querySelector('.criminal-name').innerText.toLowerCase();
            // Compare names and return the sorted result based on the current sort order
            if (currentSortOrder.name === 'asc') {
                return nameA.localeCompare(nameB);
            } else {
                return nameB.localeCompare(nameA);
            }
        });
        // Toggle the sort order for the next time the function is called
        currentSortOrder.name = currentSortOrder.name === 'asc' ? 'desc' : 'asc';

    // If the criteria is 'crimes', sort by the number of offenses
    } else if (criteria === 'crimes') {
        // Sort the array of cards based on the number of offenses
        sortedCards = cardArray.sort((a, b) => {
            // Retrieve and convert the number of crimes to an integer for comparison
            const crimesA = parseInt(a.querySelector('.criminal-crimes').innerText.replace(/\D/g, ''), 10);
            const crimesB = parseInt(b.querySelector('.criminal-crimes').innerText.replace(/\D/g, ''), 10);
            // Compare the number of crimes and return the sorted result based on the current sort order
            if (currentSortOrder.crimes === 'asc') {
                return crimesA - crimesB;
            } else {
                return crimesB - crimesA;
            }
        });
        // Toggle the sort order for the next time the function is called
        currentSortOrder.crimes = currentSortOrder.crimes === 'asc' ? 'desc' : 'asc';
    }

    // Select the container element that holds the cards
    const container = document.querySelector('.container');
    // Append each card from the sorted array back into the container, effectively reordering them
    sortedCards.forEach(card => container.appendChild(card));
}

</script>
</body>
</html>
